events {
    worker_connections 1024;
}

http {
    # Set the MIME types for the files served by Nginx
    include /etc/nginx/mime.types;

    # Set the default logging format for Nginx
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Configure the Nginx server block
    server {
        listen 80;

        # Define the root directory where the built frontend files are located
        root /usr/share/nginx/html;
        index index.html;

        location / {
            # Enable gzip compression for faster transmission
            gzip on;
            gzip_types text/plain text/css application/javascript application/json;

            # If the requested file does not exist, try to serve the index.html
            try_files $uri /index.html;
        }

        location /socket.io/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass http://localhost:5000;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        # Proxy requests to the Flask app running on localhost:5000/api
        location /api {
            proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }



        # Add any other custom configuration directives here
        # ...
    }
}